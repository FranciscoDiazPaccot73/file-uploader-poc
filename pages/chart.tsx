import Head from "next/head";
import { useState } from "react";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";

import data from "./data.json";

const inter = Inter({ subsets: ["latin"] });

const Status = {
  nothing: "",
  wait: "wait",
  pause: "pause",
  uploading: "uploading",
};

const MB = 1024 * 1024;
const SIZE_IN_MB = 5;
const SIZE = SIZE_IN_MB * MB;

export default function Home() {
  const generateCanvas = () => {
    data.forEach((item, index) => {
      const img = new Image();
      img.src = item;
      img.id = `img-${index}`;

      document.getElementById("main")?.appendChild(img);
    });
  };

  const removeImages = () => {
    data.forEach((_, index) => {
      const img = document.getElementById(`img-${index}`);
      img?.remove();
    });
  };

  const request = ({
    url,
    method = "post",
    data: reqData,
    headers = {},
    onProgress = (e) => e,
    requestList,
  }) => {
    return new Promise((resolve) => {
      const xhr = new XMLHttpRequest();
      xhr.upload.onprogress = onProgress;
      xhr.open(method, url);
      Object.keys(headers).forEach((key) =>
        xhr.setRequestHeader(key, headers[key])
      );
      xhr.send(reqData);
      xhr.onload = (e) => {
        if (requestList) {
          const xhrIndex = requestList.findIndex((item) => item === xhr);
          requestList.splice(xhrIndex, 1);
        }
        resolve({
          data: e.target.response,
        });
      };
      requestList?.push(xhr);
    });
  };

  const handleMerge = async () => {
    await request({
      url: "http://localhost:3001/merge-base",
      headers: {
        "content-type": "application/json",
      },
      data: JSON.stringify({
        chunks: data,
      }),
    });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div style={{ display: "flex", gap: "16px" }}>
          <button onClick={generateCanvas}>GENERATE</button>
          <button onClick={handleMerge}>MERGE ITTTT!</button>
          <button onClick={removeImages}>REMOVE</button>
        </div>
        <div id="main" style={{ display: "flex" }}></div>
      </main>
    </>
  );
}
